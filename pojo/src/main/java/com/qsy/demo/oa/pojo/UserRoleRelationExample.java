package com.qsy.demo.oa.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserRoleRelationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public UserRoleRelationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserRoleIdIsNull() {
            addCriterion("USER_ROLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdIsNotNull() {
            addCriterion("USER_ROLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdEqualTo(Integer value) {
            addCriterion("USER_ROLE_ID =", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdNotEqualTo(Integer value) {
            addCriterion("USER_ROLE_ID <>", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdGreaterThan(Integer value) {
            addCriterion("USER_ROLE_ID >", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ROLE_ID >=", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdLessThan(Integer value) {
            addCriterion("USER_ROLE_ID <", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ROLE_ID <=", value, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdIn(List<Integer> values) {
            addCriterion("USER_ROLE_ID in", values, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdNotIn(List<Integer> values) {
            addCriterion("USER_ROLE_ID not in", values, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ROLE_ID between", value1, value2, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ROLE_ID not between", value1, value2, "userRoleId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andRoleIdIsNull() {
            addCriterion("ROLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andRoleIdIsNotNull() {
            addCriterion("ROLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRoleIdEqualTo(Integer value) {
            addCriterion("ROLE_ID =", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotEqualTo(Integer value) {
            addCriterion("ROLE_ID <>", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdGreaterThan(Integer value) {
            addCriterion("ROLE_ID >", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ROLE_ID >=", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdLessThan(Integer value) {
            addCriterion("ROLE_ID <", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdLessThanOrEqualTo(Integer value) {
            addCriterion("ROLE_ID <=", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdIn(List<Integer> values) {
            addCriterion("ROLE_ID in", values, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotIn(List<Integer> values) {
            addCriterion("ROLE_ID not in", values, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdBetween(Integer value1, Integer value2) {
            addCriterion("ROLE_ID between", value1, value2, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ROLE_ID not between", value1, value2, "roleId");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateIsNull() {
            addCriterion("USER_ROLE_STATE is null");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateIsNotNull() {
            addCriterion("USER_ROLE_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateEqualTo(String value) {
            addCriterion("USER_ROLE_STATE =", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateNotEqualTo(String value) {
            addCriterion("USER_ROLE_STATE <>", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateGreaterThan(String value) {
            addCriterion("USER_ROLE_STATE >", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ROLE_STATE >=", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateLessThan(String value) {
            addCriterion("USER_ROLE_STATE <", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateLessThanOrEqualTo(String value) {
            addCriterion("USER_ROLE_STATE <=", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateLike(String value) {
            addCriterion("USER_ROLE_STATE like", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateNotLike(String value) {
            addCriterion("USER_ROLE_STATE not like", value, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateIn(List<String> values) {
            addCriterion("USER_ROLE_STATE in", values, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateNotIn(List<String> values) {
            addCriterion("USER_ROLE_STATE not in", values, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateBetween(String value1, String value2) {
            addCriterion("USER_ROLE_STATE between", value1, value2, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleStateNotBetween(String value1, String value2) {
            addCriterion("USER_ROLE_STATE not between", value1, value2, "userRoleState");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeIsNull() {
            addCriterion("USER_ROLE_UPDATETIME is null");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeIsNotNull() {
            addCriterion("USER_ROLE_UPDATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeEqualTo(Date value) {
            addCriterion("USER_ROLE_UPDATETIME =", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeNotEqualTo(Date value) {
            addCriterion("USER_ROLE_UPDATETIME <>", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeGreaterThan(Date value) {
            addCriterion("USER_ROLE_UPDATETIME >", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("USER_ROLE_UPDATETIME >=", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeLessThan(Date value) {
            addCriterion("USER_ROLE_UPDATETIME <", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("USER_ROLE_UPDATETIME <=", value, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeIn(List<Date> values) {
            addCriterion("USER_ROLE_UPDATETIME in", values, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeNotIn(List<Date> values) {
            addCriterion("USER_ROLE_UPDATETIME not in", values, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeBetween(Date value1, Date value2) {
            addCriterion("USER_ROLE_UPDATETIME between", value1, value2, "userRoleUpdatetime");
            return (Criteria) this;
        }

        public Criteria andUserRoleUpdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("USER_ROLE_UPDATETIME not between", value1, value2, "userRoleUpdatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_role_relation
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 17 17:17:22 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_role_relation
     *
     * @mbg.generated Tue Apr 17 17:17:22 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}